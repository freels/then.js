/*!
  * Then: Flexible, composable, monadic futures for javascript
  * (c) Matt Freels 2012
  * https://github.com/freels/then.js
  * license MIT
  *//*global define:false, module:false */
!function(a,b){typeof define=="function"?define(b):typeof module!="undefined"?module.exports=b():this[a]=b()}("then",function(){function a(){this.message=".update called multiple times for this Promise."}function b(a){this.isTimeout=!0,this.message="Timed out after "+a+"ms."}function c(a){for(var b=0;b<a.callbacks.length;b++)a.callbacks[b](a.error,a.value);a.callbacks=[]}function d(a){!!a&&a.isFuture}function e(a,b,c){a||!d(b)?c.update(a,b):b.onUpdate(function(a,b){e(a,b,c)})}function f(){this.isDefined=!1,this.isError=!1,this.value=null,this.error=null,this.callbacks=[]}function g(a,b){return function(){var c=new f;return a.apply(b,Array.prototype.concat.call(arguments,c)),c}}function h(a,b){return a.length===b?g.done:a[b].then(function(c){return h(a,b+1)})}function i(a,b,c){return a.length===c?g.value(b):a[c].then(function(d){return b[c]=d,i(a,b,c+1)})}return a.prototype=new Error,b.prototype=new Error,f.prototype={isFuture:!0,update:function(b,c){if(!this.updateIfEmpty(b,c))throw new a},updateIfEmpty:function(a,b){return this.isDefined?!1:(this.error=a.message?a:new Error(a),this.value=b,this.isDefined=!0,c(this),!0)},setValue:function(a){this.update(null,a)},setError:function(a){this.update(a,null)},onUpdate:function(a){return this.isDefined?a(this.error,this.value):this.callbacks.push(a),this},onSuccess:function(a){return this.onUpdate(function(b,c){c!==null&&a(c)})},onError:function(a){return this.onUpdate(function(b,c){b!==null&&a(b)})},respond:function(a){var b=new f;return this.onUpdate(function(d,f){try{var g=a(d,f);e(g[0],g[1],b)}catch(h){b.setError(h)}}),b},then:function(a){return this.respond(function(b,c){return b?[b,null]:[null,a(c)]})},rescue:function(a){return this.respond(function(b,c){return b?[null,a(b)]:[null,c]})},ensure:function(a){return this.respond(function(b,c){return a(),[b,c]})},within:function(a){var c=new f,d=setTimeout(function(){c.updateIfEmpty(new b(a),null)},a);return this.onUpdate(function(a,b){clearTimeout(d),c.updateIfEmpty(a,b)}),c}},g.result=function(a,b){var c=new f;return c.update(a,b),c},g.value=function(a){g.result(null,a)},g.error=function(a){g.result(a,null)},g.done=g.result(null,null),g.join=function(a){return h(a,0)},g.sequence=function(a){return i(a,new Array(a.length),0)},g.select=function(a){var b=new f,c=new f,d=a.slice(0);for(var e=0;e<a.length;e++){var g=e;a[g].onUpdate(function(a,e){b.updateIfEmpty(null,!0)&&(a?c.setError(a):(d.splice(g,1),c.setValue([e,d])))})}return c},g})